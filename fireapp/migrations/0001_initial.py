# Generated by Django 4.0.4 on 2022-05-16 12:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('scholar_no', models.CharField(max_length=15)),
                ('course_code', models.CharField(max_length=11)),
                ('classes_attended', models.IntegerField()),
                ('classes_total', models.IntegerField()),
                ('percentage', models.FloatField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'attendance_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(db_column='course_id', primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=100, unique=True)),
                ('course_department', models.IntegerField()),
                ('course_credit', models.IntegerField()),
            ],
            options={
                'db_table': 'courses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(db_column='dept_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GradingScale',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('teacher_id', models.IntegerField()),
                ('course_code', models.CharField(max_length=10)),
                ('course_dep', models.IntegerField()),
                ('gradescale', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'grading_scale',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=100)),
                ('scholar_no', models.CharField(max_length=15, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=6)),
                ('department', models.IntegerField()),
                ('semester', models.IntegerField()),
                ('mobile', models.BigIntegerField()),
                ('parents_mobile', models.BigIntegerField()),
                ('courses', models.CharField(max_length=100)),
                ('home_address', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'students_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(db_column='teacher_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('privilege', models.CharField(max_length=15)),
                ('dept_id', models.IntegerField(blank=True, null=True)),
                ('mobile', models.BigIntegerField(unique=True)),
                ('blocked', models.IntegerField()),
                ('approved', models.IntegerField()),
            ],
            options={
                'db_table': 'teachers',
                'managed': False,
            },
        ),
    ]
